// <auto-generated />
using System;
using Charity.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Charity.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200503105114_RestaurantTownAdd")]
    partial class RestaurantTownAdd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Charity.Models.Advert", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("RestaurantId");

                    b.HasKey("id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Adverts");
                });

            modelBuilder.Entity("Charity.Models.Food", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Advertid");

                    b.Property<string>("Name");

                    b.Property<int>("Quantity");

                    b.Property<string>("ReceiptId");

                    b.Property<string>("RestaurantId");

                    b.HasKey("Id");

                    b.HasIndex("Advertid");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("Charity.Models.Receipt", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdvertId");

                    b.Property<string>("CharityId");

                    b.Property<string>("RestaurantId");

                    b.HasKey("Id");

                    b.HasIndex("AdvertId");

                    b.HasIndex("CharityId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("Charity.Models.Restaurant", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("IdentityId");

                    b.Property<string>("Name");

                    b.Property<string>("Town");

                    b.HasKey("Id");

                    b.HasIndex("IdentityId");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("Charity.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<long?>("FacebookId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("PictureUrl");

                    b.Property<string>("Role");

                    b.Property<string>("Token");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Charity.Models.Advert", b =>
                {
                    b.HasOne("Charity.Models.User", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("Charity.Models.Food", b =>
                {
                    b.HasOne("Charity.Models.Advert")
                        .WithMany("Foods")
                        .HasForeignKey("Advertid");

                    b.HasOne("Charity.Models.Receipt", "Receipt")
                        .WithMany()
                        .HasForeignKey("ReceiptId");

                    b.HasOne("Charity.Models.User", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("Charity.Models.Receipt", b =>
                {
                    b.HasOne("Charity.Models.Advert", "Advert")
                        .WithMany()
                        .HasForeignKey("AdvertId");

                    b.HasOne("Charity.Models.User", "Charity")
                        .WithMany()
                        .HasForeignKey("CharityId");

                    b.HasOne("Charity.Models.User", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantId");
                });

            modelBuilder.Entity("Charity.Models.Restaurant", b =>
                {
                    b.HasOne("Charity.Models.User", "Identity")
                        .WithMany()
                        .HasForeignKey("IdentityId");
                });
#pragma warning restore 612, 618
        }
    }
}
